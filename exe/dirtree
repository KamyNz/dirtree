#!/usr/bin/env ruby
require 'dirtree'
require 'optparse'
require 'json'
require 'erb'
require 'open-uri'

options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: dirtree [options]... [file]...'

  opts.on(
    '-v',
    '--version',
    'Print version'
  ) do
    puts "Dirtree version #{Dirtree::VERSION}"
    exit
  end

  opts.on(
    '-h',
    '--help',
    'Show this help text'
  ) do
    puts opts
    exit
  end

  opts.on(
    '-l',
    '--local-dependencies',
    'Use saved JavaScript libraries instead of downloading them'
  ) do
    options[:local_dependencies] = true
  end

  opts.on(
    '-oFile.html',
    '--output=File.html',
    'Specify a path to write output, if
       not specified output will be printed to STDOUT'
  ) do |value|
    options[:output] = value
  end
end.parse!

files = ARGV.empty? ? STDIN.read.lines : ARGV
files.map!(&:strip)

root = Dirtree::Node.new('/')
files.each { |file| root.insert(file.split('/')) }
templates_dir = File.join(File.dirname(__FILE__), '..', 'templates')
template_file = File.join(templates_dir, 'tree.html.erb')
template = File.read(File.expand_path(template_file))

tree = root.as_json
result = ERB.new(template).result binding

if options[:local_dependencies]
  result.gsub! %r{(<script src="(.+)"><\/script>)} do
    injection = '<script>'
    injection << open($2).read
    injection << '</script>'

    injection
  end
end

if options.key?(:output)
  File.write(options[:output], result)
else
  puts result
end
